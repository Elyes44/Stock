# Define stages
stages:
  - build
  - test
  - docker_build
  - docker_push
  - deploy

# Cache dependencies to speed up builds
cache:
  paths:
    - node_modules/

# Build stage: install dependencies and build the project
build:
  image: node:latest
  stage: build
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/

# Test stage: run tests
test:
  image: node:latest
  stage: test
  script:
    - npm install
    - npm test

# Docker Build stage: create a Docker image
docker_build:
  image: docker:latest
  stage: docker_build
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
  artifacts:
    paths:
      - Dockerfile

# Docker Push stage: push the Docker image to GitLab's Docker registry
docker_push:
  image: docker:latest
  stage: docker_push
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

# Deploy stage: deploy the Docker image to the OpenStack K8s cluster
deploy:
  image: bitnami/kubectl:latest
  stage: deploy
  script:
    - echo "$KUBECONFIG_CONTENT" > kubeconfig
    - export KUBECONFIG=kubeconfig
    - kubectl config view
    - kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --namespace=$K8S_NAMESPACE
  environment:
    name: production
    url: http://your-app-url.com
  only:
    - master

# Add rules to run deploy stage only on tags or master branch
rules:
  - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG'
